name: Fix Code securely
description: Fix Code securely
author: Shunsuke Suzuki
branding:
  icon: git-commit
  color: blue
inputs:
  app_id:
    description: |
      GitHub App ID
    required: true
  app_private_key:
    description: |
      GitHub App Private Key
    required: true
  restrict_workflow_name:
    description: |
      Whether client Workflow name is restricted.
    required: true
    default: "true"
  workflow_name:
    description: |
      Workflow name
    required: true
    default: securefix
  commit_message:
    description: |
      Commit message
    required: true
    default: Securefix
  pull_request_comment:
    description: |
      Pull Request comment
    required: true
    default: |
      :x: Securefix failed.
runs:
  using: composite
  steps:
    # Get repository, run-id, and artifact name from label name and description
    # Download GitHub Actions Artifacts
    # Create and push commit to the branch
    - id: info
      shell: bash
      env:
        LABEL_NAME: ${{ github.event.label.name }}
        # $GITHUB_REPOSITORY/${GITHUB_RUN_ID}
        LABEL_DESCRIPTION: ${{ github.event.label.description }}
      run: |
        repo_full_name=${LABEL_DESCRIPTION%/*}
        {
          echo "repo_full_name=${repo_full_name}"
          echo "repo=${repo_full_name#*/}"
          echo "run_id=${LABEL_DESCRIPTION##*/}"
        } >> "$GITHUB_OUTPUT"

    # Create a GitHub App token to download a GitHub Actions artifact
    - uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: token
      with:
        app_id: ${{inputs.app_id}}
        private_key: ${{inputs.app_private_key}}
        repositories: >-
          ["${{ steps.info.outputs.repo }}"]
        permissions: >-
          {
            "actions": "read"
          }

    # Get GitHub Actions Workflow Run
    - id: workflow_run
      shell: bash
      env:
        GH_TOKEN: ${{ steps.token.outputs.token }}
        REPO: ${{ steps.info.outputs.repo_full_name }}
        RUN_ID: ${{ steps.info.outputs.run_id }}
        WORKFLOW: ${{ inputs.workflow_name }}
        RESTRICT_WORKFLOW: ${{ inputs.restrict_workflow_name }}
      run: |
        read -r workflow_name head_branch < <(gh run view \
          -R "$REPO" \
          --json workflowName,headBranch \
          -q '[.workflowName, .headBranch] | @tsv' \
          "$RUN_ID")
        if [ "$RESTRICT_WORKFLOW_NAME" = "true" ] && [ "$workflow_name" != "$WORKFLOW" ]; then
          echo "::error:: The workflow name must be $WORKFLOW"
          exit 1
        fi
        echo "head_branch=$head_branch" >> "$GITHUB_OUTPUT"

    # Download a GitHub Actions Artifact
    - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      with:
        github-token: ${{ steps.token.outputs.token }}
        name: ${{ github.event.label.name }}
        repository: ${{ steps.info.outputs.repo_full_name }}
        run-id: ${{ steps.info.outputs.run_id }}
    # Read a metadata file
    - id: metadata
      shell: bash
      env:
        METADATA_FILE: ${{ github.event.label.name}}.json
      run: |
        number=$(jq -r ".pull_request.number" "$METADATA_FILE")
        echo "pr_number=$number" >> "$GITHUB_OUTPUT"
        rm "$METADATA_FILE"
    # Read changed file paths
    - id: files
      shell: bash
      env:
        FILES: ${{ github.event.label.name}}_files.txt
      run: |
        {
          echo 'value<<EOF'
          cat "$FILES"
          echo EOF
        } >> "$GITHUB_OUTPUT"
        rm "$FILES"
    # Create and push a commit
    - if: ${{ steps.files.outputs.value != '' }}
      uses: suzuki-shunsuke/commit-action@9faad521ea6a1e768439ffbe6b25b6cb3fc1b181 # v0.0.6
      with:
        app_id: ${{inputs.app_id}}
        app_private_key: ${{inputs.app_private_key}}
        repository: ${{ steps.info.outputs.repo_full_name }}
        branch: ${{ steps.workflow_run.outputs.head_branch }}
        files: ${{ steps.files.outputs.value }}
        commit_message: |
          ${{inputs.commit_message}}
          ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

    # Create a GitHub App token to report an error to a pull request
    - if: failure() && steps.metadata.outputs.pr_number != 'null'
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: pr_token
      with:
        app_id: ${{inputs.app_id}}
        private_key: ${{inputs.app_private_key}}
        repositories: >-
          ["${{ steps.info.outputs.repo }}"]
        permissions: >-
          {
            "pull_requests": "write"
          }

    # Create a pull request comment to report an error
    - if: failure() && steps.metadata.outputs.pr_number != 'null'
      shell: bash
      env:
        GH_TOKEN: ${{ steps.pr_token.outputs.token }}
        REPO: ${{ steps.info.outputs.repo_full_name }}
        PR_NUMBER: ${{ steps.metadata.outputs.pr_number }}
      run: |
        gh pr comment \
          -R "$REPO" \
          -b "${{inputs.pull_request_comment}}" \
          [Workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" \
          "$PR_NUMBER"
